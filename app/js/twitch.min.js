const chatEle=document.getElementsByClassName("chat")[0],twitchBadgeCache={data:{global:{}}},bttvEmoteCache={lastUpdated:0,data:{global:[]},urlTemplate:"//cdn.betterttv.net/emote/{{id}}/{{image}}"},krakenBase="https://api.twitch.tv/kraken/",krakenClientID="gdswj1g5j9qq52avv4dvm27gf4t3mc",chatFilters=["ɐ-ʯ","ʰ-˿","̀-ͯ","Ͱ-Ͽ","Ѐ-ӿ","Ԁ-ԯ","԰-῿","℀-⅏","─-╿","▀-▟","■-◿","☀-⛿","⠀-⣿"],chatFilter=new RegExp(`[${chatFilters.join("")}]`),defaultColors=["rgb(255, 0, 0)","rgb(0, 0, 255)","rgb(0, 128, 0)","rgb(178, 34, 34)","rgb(255, 127, 80)","rgb(154, 205, 50)","rgb(255, 69, 0)","rgb(46, 139, 87)","rgb(218, 165, 32)","rgb(210, 105, 30)","rgb(95, 158, 160)","rgb(30, 144, 255)","rgb(255, 105, 180)","rgb(138, 43, 226)","rgb(0, 255, 127)"],randomColorsChosen={},useColor=!0;let client;function addListeners(){function handleMessage(channel,userstate,message,fromSelf){if(chatFilter.test(message))return void(testing&&console.log(message));let chan=getChan(channel),name=userstate["display-name"]||userstate.username;/[^\w]/g.test(name)&&(name+=` (${userstate.username})`),userstate.name=name,showMessage({chan:chan,type:"chat",message:message,data:userstate})}client.on("connecting",()=>{showAdminMessage({message:"Connecting to Twitch IRC",attribs:{subtype:"connecting"}}),removeAdminChatLine({subtype:"disconnected"})}),client.on("connected",()=>{getBTTVEmotes(),getBadges().then(badges=>twitchBadgeCache.data.global=badges),showAdminMessage({message:"Connected to Twitch IRC",attribs:{subtype:"connected"},timeout:5e3}),removeAdminChatLine({subtype:"connecting"}),removeAdminChatLine({subtype:"disconnected"})}),client.on("disconnected",()=>{twitchBadgeCache.data={global:{}},bttvEmoteCache.data={global:[]},showAdminMessage({message:"Disconnected from Twitch IRC",attribs:{subtype:"disconnected"},timeout:5e3}),removeAdminChatLine({subtype:"connecting"}),removeAdminChatLine({subtype:"connected"})}),client.on("message",handleMessage),client.on("cheer",handleMessage),client.on("join",(channel,username,self)=>{if(!self)return;let chan=getChan(channel);getBTTVEmotes(chan),twitchNameToUser(chan).then(user=>getBadges(user._id)).then(badges=>twitchBadgeCache.data[chan]=badges),showAdminMessage({message:`Joined #${chan}`,timeout:5e3})}),client.on("part",(channel,username,self)=>{if(!self)return;let chan=getChan(channel);delete bttvEmoteCache.data[chan],showAdminMessage({message:`Parted #${chan}`,timeout:5e3})}),client.on("clearchat",channel=>{$(".chat__message").remove()}),client.on("timeout",(channel,username)=>{removeChatLine({channel:channel,username:username})})}function removeChatLine(params={}){"channel"in params&&(params.channel=getChan(params.channel));let search=Object.keys(params).map(key=>`[${key}="${params[key]}"]`).join("");chatEle.querySelectorAll(search).forEach(n=>chatEle.removeChild(n))}function removeAdminChatLine(params={}){params.type="admin",removeChatLine(params)}function showAdminMessage(opts){return opts.type="admin","attribs"in opts==!1&&(opts.attribs={}),opts.attribs.type="admin",showMessage(opts)}function getChan(channel=""){return channel.replace(/^#/,"")}function showMessage({chan:chan,type:type,message:message="",data:data={},timeout:timeout=timeToShowChat,attribs:attribs={}}={}){var color=useColor?data.color:"inherit";null===color&&(randomColorsChosen.hasOwnProperty(chan)||(randomColorsChosen[chan]={}),randomColorsChosen[chan].hasOwnProperty(data.name)?color=randomColorsChosen[chan][data.name]:(color=defaultColors[Math.floor(Math.random()*defaultColors.length)],randomColorsChosen[chan][data.name]=color));let chatLine_=document.createElement("div"),chatLine=document.createElement("div");if(chatLine_.classList.add("chat__message","chat__message--twitch"),chatLine.classList.add("chat__message__inner"),chatLine_.appendChild(chatLine),chan&&chatLine_.setAttribute("channel",chan),Object.keys(attribs).forEach(key=>{chatLine_.setAttribute(key,attribs[key])}),"chat"===type){if("id"in data&&chatLine_.setAttribute("id",data.id),"user-id"in data&&chatLine_.setAttribute("userid",data["user-id"]),"room-id"in data&&chatLine_.setAttribute("channelid",data["room-id"]),"username"in data&&chatLine_.setAttribute("username",data.username),"message-type"in data&&chatLine_.classList.add("chat__message--"+data["message-type"]),"lutrabot"==data.username)return;let badgeEle=document.createElement("span");if("badges"in data&&null!==data.badges){badgeEle.classList.add("badges");let badgeGroup=Object.assign({},twitchBadgeCache.data.global,twitchBadgeCache.data[chan]||{});Object.keys(data.badges).forEach(type=>{let version=data.badges[type],group=badgeGroup[type];if(group&&version in group.versions){let url=group.versions[version].image_url_1x,ele=document.createElement("img");ele.setAttribute("src",url),ele.setAttribute("data-badgeType",type),ele.setAttribute("alt",type),ele.classList.add("badges__badge","badges__badge--twitch"),badgeEle.appendChild(ele)}},[])}let nameEle=document.createElement("span");nameEle.classList.add("chat__message__username"),nameEle.style.color=color,nameEle.innerText=data.name;let messageEle=document.createElement("span");messageEle.classList.add("chat__message__message"),addEmoteDOM(messageEle,handleEmotes(chan,data.emotes||{},message)),chatLine.appendChild(badgeEle),chatLine.appendChild(nameEle),chatLine.appendChild(messageEle)}else if("admin"===type){chatLine_.classList.add("chat__message--admin");let messageEle=document.createElement("span");messageEle.classList.add("chat__message__message"),messageEle.innerText=message,chatLine.appendChild(messageEle)}"0"===timeToShowChat?$(chatLine_.outerHTML).appendTo(".chat"):$(chatLine_.outerHTML).appendTo(".chat").hide().fadeIn("fast").delay(timeToShowChat).fadeOut("fast",function(){$(this).remove()}),setTimeout(()=>chatLine_.classList.add("visible"),100),timeout&&setTimeout(()=>{chatLine_.parentElement&&(chatLine_.classList.remove("visible"),setTimeout(()=>chatEle.removeChild(chatLine_),1e3))},timeout)}function handleEmotes(channel,emotes,message){let bttvEmotes=bttvEmoteCache.data.global.slice(0);channel in bttvEmoteCache.data&&(bttvEmotes=bttvEmotes.concat(bttvEmoteCache.data[channel]));let allEmotes=Object.keys(emotes).reduce((p,id)=>{let emoteData=emotes[id].map(n=>{let[a,b]=n.split("-"),start=+a,end=+b+1;return{start:start,end:end,id:id,code:message.slice(start,end),type:["twitch","emote"]}});return p.concat(emoteData)},[]);bttvEmotes.forEach(({code:code,id:id,type:type,imageType:imageType})=>{if(-1!==message.indexOf(code))for(let start=message.indexOf(code);start>-1;start=message.indexOf(code,start+1)){let end=start+code.length;allEmotes.push({start:start,end:end,id:id,code:code,type:type})}});let seen=[];if((allEmotes=allEmotes.sort((a,b)=>a.start-b.start).filter(({start:start,end:end})=>!(seen.length&&!seen.every(n=>start>n.end))&&(seen.push({start:start,end:end}),!0))).length){let finalMessage=[message.slice(0,allEmotes[0].start)];return allEmotes.forEach((n,i)=>{let p=Object.assign({},n,{i:i}),{end:end}=p;finalMessage.push(p),i===allEmotes.length-1?finalMessage.push(message.slice(end)):finalMessage.push(message.slice(end,allEmotes[i+1].start)),finalMessage=finalMessage.filter(n=>n)}),finalMessage}return[message]}function addEmoteDOM(ele,data){data.forEach(n=>{let out=null;if("string"==typeof n)out=document.createTextNode(n);else{let{type:[type,subtype],code:code}=n;if("twitch"===type)"emote"===subtype&&((out=document.createElement("img")).classList.add("emoticon","emoticon--twitch"),out.setAttribute("src",`https://static-cdn.jtvnw.net/emoticons/v1/${n.id}/1.0`),out.setAttribute("alt",code));else if("bttv"===type){out=document.createElement("img");let url=bttvEmoteCache.urlTemplate;url=url.replace("{{id}}",n.id).replace("{{image}}","1x"),out.classList.add("emoticon","emoticon--twitch"),out.setAttribute("src","https:"+url),out.setAttribute("alt",code)}}out&&ele.appendChild(out)}),twemoji.parse(ele)}function formQuerystring(qs={}){return Object.keys(qs).map(key=>`${key}=${qs[key]}`).join("&")}function request({base:base="",endpoint:endpoint="",qs:qs,headers:headers={},method:method="get"}){let opts={method:method,headers:new Headers(headers)};return fetch(base+endpoint+"?"+formQuerystring(qs),opts).then(res=>res.json())}function kraken(opts){let defaults={base:krakenBase,headers:{"Client-ID":krakenClientID,Accept:"application/vnd.twitchtv.v5+json"}};return request(Object.assign(defaults,opts))}function twitchNameToUser(username){return kraken({endpoint:"users",qs:{login:username}}).then(({users:users})=>users[0]||null)}function getBadges(channel){return kraken({base:"https://badges.twitch.tv/v1/badges/",endpoint:(channel?`channels/${channel}`:"global")+"/display",qs:{language:"en"}}).then(data=>data.badge_sets)}function getClip(clipSlug){return kraken({endpoint:`clips/${clipSlug}`})}function getBTTVEmotes(channel){let endpoint="emotes",global=!0;return channel&&(endpoint="channels/"+channel,global=!1),request({base:"https://api.betterttv.net/2/",endpoint:endpoint}).then(({emotes:emotes,status:status,urlTemplate:urlTemplate})=>{404!==status&&(bttvEmoteCache.urlTemplate=urlTemplate,emotes.forEach(n=>{n.global=global,n.type=["bttv","emote"],global?bttvEmoteCache.data.global.push(n):(channel in bttvEmoteCache.data==!1&&(bttvEmoteCache.data[channel]=[]),bttvEmoteCache.data[channel].push(n))}))})}client=new tmi.client({connection:{reconnect:!0,secure:!0},channels:[getUrlParameter("username")]}),addListeners(),client.connect();